{"version":3,"sources":["components/Home/Home.js","components/About/About.js","components/Projects/Display.js","components/Projects/Project.js","components/Contact/Contact.js","components/ToolBar/ToolBar.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Image","src","Jumbotron","Component","About","Display","Card","Body","Title","this","props","title","Text","text","Button","variant","href","link","style","color","Project","Header","as","Row","Col","components_Projects_Display","Contact","ToolBar","Navbar","bg","NavLink","exact","to","activeStyle","App","BrowserRouter","Switch","components_ToolBar_ToolBar","Redirect","from","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.123b67f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Image, Jumbotron } from 'react-bootstrap';\r\nimport './Home.css';\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className='black'>\r\n                <Image src='/Website/assets/images/bear.jpg'\r\n                    className='header-image' />\r\n                <Jumbotron className='jumbotron'>\r\n                    <h1>Welcome!</h1>\r\n                    <h5>\r\n                       Feel free to browse my webpage\r\n                        \r\n                    </h5>\r\n                    <h5>and contact me if you have any questions or comments!</h5>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Hi I am benny Thai\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport './Display.css';\r\nclass Display extends Component {\r\n    render() {\r\n        return (\r\n            <div className='card'>\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.title}</Card.Title>\r\n                    <Card.Text>\r\n                        {this.props.text}\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\">\r\n                        <a href={this.props.link} style={{ color: 'white' }}>\r\n                            Project Link\r\n                            </a>\r\n                    </Button>\r\n                </Card.Body>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport Display from './Display';\r\nimport './Project.css';\r\nconst Project = (props) => {\r\n\r\n    return (\r\n        <div className='center'>\r\n\r\n            <Card.Header as=\"h5\">\r\n                <a href={'https://github.com/Deckins'}>\r\n                    My Github Profile\r\n                </a>\r\n            </Card.Header>\r\n            <Row>\r\n                <Col>\r\n                    <Display\r\n                        title={'Draw-A-Sketch'}\r\n                        text={'Click the link to see what kind of drawing you can create!'}\r\n                        link={'https://deckins.github.io/Etch-a-Sketch/'}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n\r\n                    <Display\r\n                        title={'GoSave'}\r\n                        text={'Compete with your friends to see who can save the most money!'}\r\n                        link={'https://github.com/calchen01/GoSave/'}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n\r\n                    <Display\r\n                        title={'Calculator'}\r\n                        text={'Check out this fully functioning calculator with an interesting design!'}\r\n                        link={'https://deckins.github.io/Calculator/'}\r\n                    />\r\n                </Col>\r\n               \r\n                <Col>\r\n\r\n                    <Display\r\n                        title={'RockPaperNScissors'}\r\n                        text={'Battle the Computer in an intense game of Rock, paper and scissors!'}\r\n                        link={'https://deckins.github.io/rock_paper_scissors/'}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Project;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                You can contact me @bennythai2014@yahoo.com\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './ToolBar.css';\r\nclass ToolBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"primary\" variant=\"light\">\r\n        <NavLink exact to=\"/Website\" style={{ color: 'white' }}><h4>Home</h4></NavLink>\r\n        <ul>\r\n          <li><NavLink style={{ color: 'white' }} activeStyle={{ color: 'blue' }} to=\"/projects\">Projects</NavLink></li>\r\n          <li><NavLink style={{ color: 'white' }} activeStyle={{ color: 'blue' }} to=\"/about\">About Me</NavLink></li>\r\n          <li><NavLink style={{ color: 'white' }} activeStyle={{ color: 'blue' }} to=\"/contact\">Contact</NavLink></li>\r\n        </ul>\r\n      </Navbar>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolBar;","import React, { Component } from 'react';\r\nimport Home from './components/Home/Home';\r\nimport About from './components/About/About';\r\nimport Project from './components/Projects/Project';\r\nimport Contact from './components/Contact/Contact';\r\nimport ToolBar from './components/ToolBar/ToolBar';\r\nimport { BrowserRouter, Route, Redirect, Switch} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className='App'>\r\n        <Switch>\r\n          <ToolBar />\r\n          <Redirect to='/Website' from='/' exact />\r\n        </Switch>\r\n            <Route exact path=\"/Website\" component={Home} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route exact path=\"/projects\" component={Project} />\r\n            <Route exact path=\"/contact\" component={Contact} />\r\n            \r\n            \r\n\r\n          \r\n\r\n\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}